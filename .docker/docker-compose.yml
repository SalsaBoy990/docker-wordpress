version: '3'

services:

  db:
    image: mysql:8.0
    container_name: ${APP_NAME}-db
    volumes: # data to map to the container
      #- ../src/DB:/docker-entrypoint-initdb.d # where to find the db dump data
      - db_data:/var/lib/mysql
    restart: unless-stopped
    environment: # mysql options
      - MYSQL_ROOT_PASSWORD=${APP_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${APP_DB_NAME}
      - MYSQL_USER=${APP_DB_USER}
      - MYSQL_PASSWORD=${APP_DB_PASSWORD}

    # for mysql 8.0, change autentication to native password (legacy)
    command: [
      '--default-authentication-plugin=mysql_native_password',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci'
    ]


  wordpress:
    container_name: ${APP_NAME}-wordpress
    depends_on:
      - db
    image: wordpress:latest
    build:
      context: ./images/wordpress
      dockerfile: Dockerfile # need to install the wp-cli that is missing from the official image
    ports:
      - "${WORDPRESS_PORT}:80"
    restart: unless-stopped
    environment:
      - WORDPRESS_DB_HOST=db:${MYSQL_PORT}
      - WORDPRESS_DB_USER=${APP_DB_USER}
      - WORDPRESS_DB_PASSWORD=${APP_DB_PASSWORD} # matches the password set in the db container
      - WORDPRESS_DB_NAME=${APP_DB_NAME}
      - WORDPRESS_DEBUG=true
    volumes:
      - ../src:/var/www/html:cached

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: "${APP_NAME}-phpmyadmin"
    restart: unless-stopped
    environment:
      PMA_HOST: db:${MYSQL_PORT}
    ports:
      - ${PHPMYADMIN_PORT}:80
  
  mailcatcher:
    image: sj26/mailcatcher
    container_name: "${APP_NAME}-mailcatcher"
    ports:
      - "1080:1080"

volumes:
    db_data: {} # persist db data in native named volume
